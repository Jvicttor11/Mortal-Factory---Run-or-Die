using UnityEngine;
using System.Collections;
using UnityEngine.UI;
using System;

[RequireComponent(typeof(CharacterController))]
public class FPSController : MonoBehaviour {

    public float speed = 6.0f;
    public float vida = 100;
    public float jump = 6.0f;
    GameObject cameraFPS;
    Vector3 moveDirection = Vector3.zero;
    CharacterController controller;
    float rotacaoX = 0.0f, rotacaoY = 0.0f;
    public AudioSource AudioAndar;
    public AudioSource AudioPular;
    public AudioSource AudioDano;

    public Text Vida;

    void Start () {
        Cursor.lockState = CursorLockMode.Locked;
        Cursor.visible = false;
        transform.tag = "Player";
        cameraFPS = transform.gameObject;      
        //cameraFPS.transform.localPosition = new Vector3 (9.25f, 0.1f, 17);
       cameraFPS.transform.localRotation = Quaternion.identity;
        controller = GetComponent<CharacterController> ();
    }

 void Update () {

        if(vida > 0)
            Vida.text = "Vida: " + vida;
        else
            Vida.text = "Vida: " + vida + " Você Morreu... ";

        Vector3 direcaoFrente = new Vector3 (cameraFPS.transform.forward.x, 0, cameraFPS.transform.forward.z);
        Vector3 direcaoLado = new Vector3 (cameraFPS.transform.right.x, 0, cameraFPS.transform.right.z);
        direcaoFrente.Normalize ();
        direcaoLado.Normalize ();
        direcaoFrente = direcaoFrente * Input.GetAxis ("Vertical");
        direcaoLado = direcaoLado * Input.GetAxis ("Horizontal");
        Vector3 direcFinal = direcaoFrente + direcaoLado;
        if (direcFinal.sqrMagnitude > 1) {
            if(!AudioAndar.isPlaying)
            AudioAndar.Play();
            direcFinal.Normalize ();
 }
  
 if (controller.isGrounded) {
 moveDirection = new Vector3 (direcFinal.x, 0, direcFinal.z);
 moveDirection *= speed;
 if (Input.GetButton ("Jump")) {
                if (!AudioPular.isPlaying)
                {
                    AudioAndar.Stop();
                    AudioPular.Play();
                }
                moveDirection.y = jump;
 }
 }

 moveDirection.y -= 20.0f * Time.deltaTime;
 controller.Move (moveDirection * Time.deltaTime);

        CameraPrimeiraPessoa ();
 }

    public float dano(int dano){
        AudioDano.Play();
        return vida -= dano;
    }

 void CameraPrimeiraPessoa(){
 rotacaoX += Input.GetAxis ("Mouse X") * 10.0f;
 rotacaoY += Input.GetAxis ("Mouse Y") * 10.0f;
 rotacaoX = ClampAngleFPS (rotacaoX, -360, 360);
 rotacaoY = ClampAngleFPS (rotacaoY, -80, 80);
 Quaternion xQuaternion = Quaternion.AngleAxis (rotacaoX, Vector3.up);
 Quaternion yQuaternion = Quaternion.AngleAxis (rotacaoY, -Vector3.right);
 Quaternion rotacFinal = Quaternion.identity * xQuaternion * yQuaternion;
 cameraFPS.transform.localRotation = Quaternion.Lerp (cameraFPS.transform.localRotation, rotacFinal, Time.deltaTime * 10.0f);
 }

 float ClampAngleFPS(float angulo, float min, float max){
 if (angulo < -360) {
 angulo += 360;
 }
 if (angulo > 360) {
 angulo -= 360;
 }
 return Mathf.Clamp (angulo, min, max);
 }




}




